var d=Object.defineProperty;var g=(s,a,t)=>a in s?d(s,a,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[a]=t;var e=(s,a,t)=>(g(s,typeof a!="symbol"?a+"":a,t),t);import{N as l,K as C,M as W,bt as f,P as w,Q as y,s as T,R as o,U as R}from"./index.63d6a091.js";import{C as b,a as S,G as E,b as A}from"./contract-appuri-04bfc126.browser.esm.a030217c.js";import{C as B}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as M,a as O}from"./contract-owner-d0899d6f.browser.esm.ced050be.js";import{C as P}from"./contract-platform-fee-bb93a8e4.browser.esm.496a1100.js";import{C as v}from"./contract-roles-246fe733.browser.esm.e8dae6b2.js";import{C as I}from"./contract-sales-e8c058ab.browser.esm.b7c588a1.js";import{S as U}from"./erc-721-standard-64a89512.browser.esm.4f4db28a.js";import{a as k}from"./erc-721-74018339.browser.esm.c73c7f60.js";import"./setErc20Allowance-2030d581.browser.esm.75a2d3b6.js";import"./QueryParams-57e79923.browser.esm.95c2e768.js";import"./index.8a1c7d0b.js";import"./assertEnabled-f15292a2.browser.esm.bd2a0b65.js";import"./drop-claim-conditions-6965683b.browser.esm.e45fbd7e.js";const i=class extends U{constructor(t,r,n){let h=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},p=arguments.length>4?arguments[4]:void 0,m=arguments.length>5?arguments[5]:void 0,u=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new C(t,r,p,h,n);super(u,n,m);e(this,"mint",o(async t=>this.erc721.mint.prepare(t)));e(this,"mintTo",o(async(t,r)=>this.erc721.mintTo.prepare(t,r)));e(this,"mintBatch",o(async t=>this.erc721.mintBatch.prepare(t)));e(this,"mintBatchTo",o(async(t,r)=>this.erc721.mintBatchTo.prepare(t,r)));e(this,"burn",o(t=>this.erc721.burn.prepare(t)));this.abi=W.parse(p||[]),this.metadata=new b(this.contractWrapper,f,this.storage),this.app=new S(this.contractWrapper,this.metadata,this.storage),this.roles=new v(this.contractWrapper,i.contractRoles),this.royalties=new M(this.contractWrapper,this.metadata),this.sales=new I(this.contractWrapper),this.encoder=new w(this.contractWrapper),this.estimator=new E(this.contractWrapper),this.events=new A(this.contractWrapper),this.platformFees=new P(this.contractWrapper),this.interceptor=new B(this.contractWrapper),this.signature=new k(this.contractWrapper,this.storage),this.owner=new O(this.contractWrapper)}onNetworkUpdated(t){this.contractWrapper.updateSignerOrProvider(t)}getAddress(){return this.contractWrapper.address}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[y("transfer"),T])}async getMintTransaction(t,r){return this.erc721.getMintTransaction(t,r)}async prepare(t,r,n){return R.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:n})}async call(t,r,n){return this.contractWrapper.call(t,r,n)}};let c=i;e(c,"contractRoles",l);export{c as NFTCollection};
