var d=Object.defineProperty;var f=(s,e,t)=>e in s?d(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>(f(s,typeof e!="symbol"?e+"":e,t),t);import{bI as C,K as w,M as W,bJ as y,P as R,a5 as i,Q as b,s as T,R as c,U as l}from"./index.63d6a091.js";import{C as A,a as E,G as S,b as O}from"./contract-appuri-04bfc126.browser.esm.a030217c.js";import{C as v}from"./contract-interceptor-d7b164a7.browser.esm.b65ebba9.js";import{C as D}from"./contract-platform-fee-bb93a8e4.browser.esm.496a1100.js";import{C as F}from"./contract-roles-246fe733.browser.esm.e8dae6b2.js";import{C as V}from"./contract-sales-e8c058ab.browser.esm.b7c588a1.js";import{D as I}from"./drop-claim-conditions-6965683b.browser.esm.e45fbd7e.js";import{S as P}from"./erc-20-standard-c5ca6f59.browser.esm.fef0457a.js";import"./index.8a1c7d0b.js";import"./assertEnabled-f15292a2.browser.esm.bd2a0b65.js";import"./setErc20Allowance-2030d581.browser.esm.75a2d3b6.js";import"./erc-20-f0dd5e9a.browser.esm.67fe6d49.js";const h=class extends P{constructor(t,r,a){let o=arguments.length>3&&arguments[3]!==void 0?arguments[3]:{},m=arguments.length>4?arguments[4]:void 0,u=arguments.length>5?arguments[5]:void 0,g=arguments.length>6&&arguments[6]!==void 0?arguments[6]:new w(t,r,m,o,a);super(g,a,u);n(this,"claim",c((()=>{var t=this;return async function(r){let a=arguments.length>1&&arguments[1]!==void 0?arguments[1]:!0;return t.claimTo.prepare(await t.contractWrapper.getSignerAddress(),r,a)}})()));n(this,"claimTo",c((()=>{var t=this;return async function(r,a){let o=arguments.length>2&&arguments[2]!==void 0?arguments[2]:!0;return t.erc20.claimTo.prepare(r,a,{checkERC20Allowance:o})}})()));n(this,"delegateTo",c(async t=>l.fromContractWrapper({contractWrapper:this.contractWrapper,method:"delegate",args:[await i(t)]})));n(this,"burnTokens",c(async t=>this.erc20.burn.prepare(t)));n(this,"burnFrom",c(async(t,r)=>this.erc20.burnFrom.prepare(t,r)));this.abi=W.parse(m||[]),this.metadata=new A(this.contractWrapper,y,this.storage),this.app=new E(this.contractWrapper,this.metadata,this.storage),this.roles=new F(this.contractWrapper,h.contractRoles),this.encoder=new R(this.contractWrapper),this.estimator=new S(this.contractWrapper),this.events=new O(this.contractWrapper),this.sales=new V(this.contractWrapper),this.platformFees=new D(this.contractWrapper),this.interceptor=new v(this.contractWrapper),this.claimConditions=new I(this.contractWrapper,this.metadata,this.storage)}async getVoteBalance(){return await this.getVoteBalanceOf(await this.contractWrapper.getSignerAddress())}async getVoteBalanceOf(t){return await this.erc20.getValue(await this.contractWrapper.read("getVotes",[await i(t)]))}async getDelegation(){return await this.getDelegationOf(await this.contractWrapper.getSignerAddress())}async getDelegationOf(t){return await this.contractWrapper.read("delegates",[await i(t)])}async isTransferRestricted(){return!await this.contractWrapper.read("hasRole",[b("transfer"),T])}async prepare(t,r,a){return l.fromContractWrapper({contractWrapper:this.contractWrapper,method:t,args:r,overrides:a})}async call(t,r,a){return this.contractWrapper.call(t,r,a)}};let p=h;n(p,"contractRoles",C);export{p as TokenDrop};
